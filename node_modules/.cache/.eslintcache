[{"/Users/jassy/BootCamp /Jaspertena/src/index.js":"1","/Users/jassy/BootCamp /Jaspertena/src/App.js":"2","/Users/jassy/BootCamp /Jaspertena/src/components/PortfolioContainer.js":"3","/Users/jassy/BootCamp /Jaspertena/src/components/NavTabs.js":"4","/Users/jassy/BootCamp /Jaspertena/src/components/pages/Contact.js":"5","/Users/jassy/BootCamp /Jaspertena/src/components/pages/About.js":"6","/Users/jassy/BootCamp /Jaspertena/src/components/pages/Portfolio.js":"7","/Users/jassy/BootCamp /Jaspertena/src/components/pages/Resume.js":"8","/Users/jassy/BootCamp /Jaspertena/src/components/ImageResize.js":"9"},{"size":215,"mtime":1653831901990,"results":"10","hashOfConfig":"11"},{"size":359,"mtime":1653831861955,"results":"12","hashOfConfig":"11"},{"size":1200,"mtime":1653685785815,"results":"13","hashOfConfig":"11"},{"size":2229,"mtime":1653687707170,"results":"14","hashOfConfig":"11"},{"size":1128,"mtime":1653833417374,"results":"15","hashOfConfig":"11"},{"size":880,"mtime":1653710412834,"results":"16","hashOfConfig":"11"},{"size":1599,"mtime":1653833742691,"results":"17","hashOfConfig":"11"},{"size":156,"mtime":1653686454178,"results":"18","hashOfConfig":"11"},{"size":3515,"mtime":1653832824911,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"hgub36",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"23"},"/Users/jassy/BootCamp /Jaspertena/src/index.js",[],[],[],"/Users/jassy/BootCamp /Jaspertena/src/App.js",["52"],[],"import React from \"react\";\nimport PortfolioContainer from \"./components/PortfolioContainer\";\nimport ImageResize from './components/ImageResize';\n// import Appl from './Appl.css';\nconst App = () => <PortfolioContainer />;\n\n// function Appl() {\n//   return (\n//     <div className=\"App\">\n//       <ImageResize />\n//     </div>\n//   );\n// }\n\nexport default App;\n","/Users/jassy/BootCamp /Jaspertena/src/components/PortfolioContainer.js",[],[],"/Users/jassy/BootCamp /Jaspertena/src/components/NavTabs.js",[],[],"/Users/jassy/BootCamp /Jaspertena/src/components/pages/Contact.js",["53","54","55","56"],[],"import React, {useState} from 'react';\n\nexport default function Contact() {\n  const [Name, setName] = useState(\"\")\n  const [Email, setEmail] = useState(\"\")\n  const [Phone, setPhone] = useState(\"\")\n  const [Message, setMessage] = useState(\"\")\n\nconst handleSubmit = (event) => { \n  event.preventDefault()\n  setName(\"\");\n  setPhone(\"\");\n  setMessage(\"\");\n  setEmail(\"\");\n}\n  return (\n    <>\n    <div>\n      <h1 style={{color:\"purple\"}}>Contact Page</h1>\n    </div>\n    <div className=\"row d-flex justify-content-center\">\n    <form className=\"form-group col-6\">\n      <label className=\"text-bold text-dark\" >Name</label>\n    <input type=\"text\" className=\"form-control mb-3\"/>\n      <label className=\"text-bold text-dark\">Email</label>\n    <input type=\"text\" className=\"form-control mb-3\"/>\n      <label className=\"text-bold text-dark\">Phone</label>\n    <input type=\"text\" className=\"form-control mb-3\"/>\n      <label className=\"text-bold text-dark\">Message</label>\n    <textarea className=\"form-control mb-3\"/>\n    <button onClick={{handleSubmit}} className=\"btn btn-info\">Submit</button>\n    </form>\n    </div>\n    </>\n    \n  );\n}\n","/Users/jassy/BootCamp /Jaspertena/src/components/pages/About.js",["57"],[],"\n   \nimport React from 'react';\nimport Profile from '../../Assets/Profilepic.jpeg';\n\nexport default function About() {\n  return (\n    <div>\n      <h1>About Page</h1>\n      <img src={Profile} className=\"card-img-top\" alt=\"Profile Picture\"/>\n      <p className=\"Font\" >\n      As a recent Georgia Tech Bootcamp full stack web developer graduate, I am \n      looking to  leverage an accounting and finance background to build a more \n      intuitive user experience on the web. I aim to use my newly developed \n      skills in JavaScript, CSS, React.js, SQL, Node.js,  MongoDB and responsive\n      web design along with seasoned interpersonal, problem solving and critical \n      thinking skills to add value in a team environment.  I have worked on  \n      teams to build full stack websites from creations  of concepts to \n      fully deployed sites. \n      </p> \n\n    </div>\n  );\n}","/Users/jassy/BootCamp /Jaspertena/src/components/pages/Portfolio.js",[],[],"/Users/jassy/BootCamp /Jaspertena/src/components/pages/Resume.js",[],[],"/Users/jassy/BootCamp /Jaspertena/src/components/ImageResize.js",["58"],[],"import React from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport ProfilePic from \"../Assets/headshot.jpeg\"\n\nclass ImageResize extends React.Component {\n    state = {\n        src: null,\n        crop: {\n          unit: '%',\n          width: 20,\n          aspect: 16 / 9\n        }\n      };\n    \n      onFileChange = (e) => {\n        if (e.target.files && e.target.files.length > 0) {\n          const reader = new FileReader();\n          reader.addEventListener('load', () =>\n            this.setState({ src: reader.result })\n          );\n          reader.readAsDataURL(e.target.files[0]);\n        }\n      };\n    \n      // If you setState the crop in here you should return false.\n      onImageLoaded = (image) => {\n        this.imageRef = image;\n      };\n    \n      onCropComplete = (crop) => {\n        this.makeClientCrop(crop);\n      };\n    \n      onCropChange = (crop, percentCrop) => {\n        // You could also use percentCrop:\n        // this.setState({ crop: percentCrop });\n        this.setState({ crop });\n      };\n    \n      async makeClientCrop(crop) {\n        if (this.imageRef && crop.width && crop.height) {\n          const croppedImageUrl = await this.getCroppedImg(\n            this.imageRef,\n            crop,\n            'newFile.jpeg'\n          );\n          this.setState({ croppedImageUrl });\n        }\n      }\n    \n      getCroppedImg(image, crop, fileName) {\n        const canvas = document.createElement('canvas');\n        const pixelRatio = window.devicePixelRatio;\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        const ctx = canvas.getContext('2d');\n    \n        canvas.width = crop.width * pixelRatio * scaleX;\n        canvas.height = crop.height * pixelRatio * scaleY;\n    \n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        ctx.imageSmoothingQuality = 'high';\n    \n        ctx.drawImage(\n          image,\n          crop.x * scaleX,\n          crop.y * scaleY,\n          crop.width * scaleX,\n          crop.height * scaleY,\n          0,\n          0,\n          crop.width * scaleX,\n          crop.height * scaleY\n        );\n    \n        return new Promise((resolve, reject) => {\n          canvas.toBlob(\n            (blob) => {\n              if (!blob) {\n                //reject(new Error('Canvas is empty'));\n                console.error('Canvas is empty');\n                return;\n              }\n              blob.name = fileName;\n              window.URL.revokeObjectURL(this.fileUrl);\n              this.fileUrl = window.URL.createObjectURL(blob);\n              resolve(this.fileUrl);\n            },\n            'image/jpeg',\n            1\n          );\n        });\n      }\n    \n      render() {\n        const { crop, croppedImageUrl, src } = this.state;\n    \n        return (\n          <div className=\"App\">\n            <div>\n              <input type=\"file\" accept=\"image/*\" onChange={this.onFileChange} />\n            </div>\n            {src && (\n              <ReactCrop\n                src={src}\n                crop={crop}\n                ruleOfThirds\n                onImageLoaded={this.onImageLoaded}\n                onComplete={this.onCropComplete}\n                onChange={this.onCropChange}\n              />\n            )}\n            {croppedImageUrl && (\n              <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\n            )}\n          </div>\n        );\n      }\n}\n\nexport default ImageResize;",{"ruleId":"59","severity":1,"message":"60","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":19},{"ruleId":"59","severity":1,"message":"63","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"59","severity":1,"message":"64","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":15},{"ruleId":"59","severity":1,"message":"65","line":6,"column":10,"nodeType":"61","messageId":"62","endLine":6,"endColumn":15},{"ruleId":"59","severity":1,"message":"66","line":7,"column":10,"nodeType":"61","messageId":"62","endLine":7,"endColumn":17},{"ruleId":"67","severity":1,"message":"68","line":10,"column":7,"nodeType":"69","endLine":10,"endColumn":74},{"ruleId":"59","severity":1,"message":"70","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":18},"no-unused-vars","'ImageResize' is defined but never used.","Identifier","unusedVar","'Name' is assigned a value but never used.","'Email' is assigned a value but never used.","'Phone' is assigned a value but never used.","'Message' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'ProfilePic' is defined but never used."]